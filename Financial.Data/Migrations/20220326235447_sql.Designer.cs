// <auto-generated />
using System;
using Financial.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Financial.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220326235447_sql")]
    partial class sql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinanceAccountType")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentTermsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("FinanceAccounts");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Addition")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FinanceAccountId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("GrossTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("FinanceAccountId");

                    b.ToTable("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsPaymentItemsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FinanceAccountsItemsId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Payday")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FinanceAccountsItemsId");

                    b.ToTable("FinanceAccountsPaymentItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.PaymentTerms.PaymentTermsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ForceExpiration")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTerms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff14ec43-a5c0-490d-ae85-0657302d0740"),
                            CompanyId = new Guid("a9b1d8b5-59d5-40f2-bdd4-78aad9cae45c"),
                            CreateAt = new DateTime(2022, 3, 26, 20, 54, 47, 97, DateTimeKind.Local).AddTicks(322),
                            Description = "Á vista",
                            ForceExpiration = 0,
                            UpdateAt = new DateTime(2022, 3, 26, 20, 54, 47, 98, DateTimeKind.Local).AddTicks(3856)
                        },
                        new
                        {
                            Id = new Guid("fbb6cfde-770e-4013-80ef-a6eea5b0bbe7"),
                            CompanyId = new Guid("a9b1d8b5-59d5-40f2-bdd4-78aad9cae45c"),
                            CreateAt = new DateTime(2022, 3, 26, 20, 54, 47, 99, DateTimeKind.Local).AddTicks(3830),
                            Description = "30 dias",
                            ForceExpiration = 0,
                            UpdateAt = new DateTime(2022, 3, 26, 20, 54, 47, 99, DateTimeKind.Local).AddTicks(3838)
                        });
                });

            modelBuilder.Entity("Financial.Domain.Entities.PaymentTerms.PaymentTermsItemsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Addition")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Days")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("PaymentTermsId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTermsId");

                    b.ToTable("PaymentTermsItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ba4ab5c-491f-4351-a40b-44b500f84f58"),
                            Addition = 0m,
                            CompanyId = new Guid("a9b1d8b5-59d5-40f2-bdd4-78aad9cae45c"),
                            CreateAt = new DateTime(2022, 3, 26, 20, 54, 47, 99, DateTimeKind.Local).AddTicks(4464),
                            Days = 30,
                            Discount = 0m,
                            PaymentTermsId = new Guid("fbb6cfde-770e-4013-80ef-a6eea5b0bbe7"),
                            UpdateAt = new DateTime(2022, 3, 26, 20, 54, 47, 99, DateTimeKind.Local).AddTicks(4469)
                        });
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.HasOne("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", "FinanceAccount")
                        .WithMany("FinanceAccountsItems")
                        .HasForeignKey("FinanceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceAccount");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsPaymentItemsEntity", b =>
                {
                    b.HasOne("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", "FinanceAccountsItems")
                        .WithMany("PaymentItems")
                        .HasForeignKey("FinanceAccountsItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.PaymentTerms.PaymentTermsItemsEntity", b =>
                {
                    b.HasOne("Financial.Domain.Entities.PaymentTerms.PaymentTermsEntity", "PaymentTerms")
                        .WithMany("PaymentTermsItems")
                        .HasForeignKey("PaymentTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentTerms");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", b =>
                {
                    b.Navigation("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.Navigation("PaymentItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.PaymentTerms.PaymentTermsEntity", b =>
                {
                    b.Navigation("PaymentTermsItems");
                });
#pragma warning restore 612, 618
        }
    }
}
