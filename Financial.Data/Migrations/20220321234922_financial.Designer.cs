// <auto-generated />
using System;
using Financial.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Financial.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220321234922_financial")]
    partial class financial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinanceAccountType")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentTermsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("FinanceAccounts");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Addition")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FinanceAccountId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("GrossTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("FinanceAccountId");

                    b.ToTable("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsPaymentItemsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FinanceAccountsItemsId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Payday")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FinanceAccountsItemsId");

                    b.ToTable("FinanceAccountsPaymentItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.HasOne("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", "FinanceAccount")
                        .WithMany("FinanceAccountsItems")
                        .HasForeignKey("FinanceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceAccount");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsPaymentItemsEntity", b =>
                {
                    b.HasOne("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", "FinanceAccountsItems")
                        .WithMany("PaymentItems")
                        .HasForeignKey("FinanceAccountsItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsEntity", b =>
                {
                    b.Navigation("FinanceAccountsItems");
                });

            modelBuilder.Entity("Financial.Domain.Entities.FinanceAccounts.FinanceAccountsItemsEntity", b =>
                {
                    b.Navigation("PaymentItems");
                });
#pragma warning restore 612, 618
        }
    }
}
